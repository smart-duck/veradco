apiVersion: apps/v1
kind: Deployment
metadata:
  name: forbidtagplugin2
  namespace: veradco-plugins
  labels:
    app: forbidtagplugin2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: forbidtagplugin2
  template:
    metadata:
      labels:
        app: forbidtagplugin2
    spec:
      containers:
      - name: forbidtagplugin2
        image: localhost:5001/smartduck/forbidtag-grpc-plugin:0.1
        command: ["/app/forbidtag"]
        args: ["-port=50052"]
        imagePullPolicy: Always
        ports:
        - containerPort: 50053
        env:
        - name: PLUGIN_CONF_FILE
          value: "/conf/plugin.yaml"
        volumeMounts:
        - name: config-volume
          mountPath: /conf/
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: forbidtagplugin2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: forbidtagplugin2
  namespace: veradco-plugins
data:
  plugin.yaml: |
    name: "forbidtagplugin2"
    path: "forbidtagplugin2.veradco-plugins.svc.cluster.local:50053"
    # It is possible to make your regular expression act as a reverse pattern. To do so, just prefix it with (!~)
    # Except that, it works as defined in the Golang regexp package.
    # By example, "(!~)(?i)test" matches that the value does not contain "test" whatever the case is.
    # A regular expression to define the kinds on which the plugin is called
    kinds: "^Pod$"
    # A regular expression to define the operations on which the plugin is called
    # Example: "CREATE|UPDATE"
    # It's up to the plugin to manage different operations in its code
    operations: "CREATE|UPDATE"
    # A regular expression to define the namespaces in the scope of the plugin
    # Example: "kube-system|default"
    namespaces: ".*"
    # Filter only on resources having some labels.
    # Both key and value are regular expressions
    # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    dryRun: false
    # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    configuration: |
      tagToForbid: "(?i):latest$"
    # A regular expression that define the scope of the plugin.
    # "Validating|Mutating" fits to both scopes
    scope: "Validating"
    endpoints: "/validate/pods"
    grpcAutoAccept: false
    grpcUnallowOnFailure: true
---
apiVersion: v1
kind: Service
metadata:
  name: forbidtagplugin2
  namespace: veradco-plugins
  labels:
    veradco.discover: "just_need_to_be_defined"
spec:
  selector:
    app: forbidtagplugin2
  ports:
    - port: 50053
      targetPort: 50053