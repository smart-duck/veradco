apiVersion: v1
kind: ConfigMap
metadata:
  name: veradco
  namespace: veradco
data:
  veradco.yaml: |
    failOnPluginLoadingFails: true
    plugins:
    # - name: "Basic"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-basic.so"
    #   # It is possible to make your regular expression act as a reverse pattern. To do so, just prefix it with (!~)
    #   # Except that, it works as defined in the Golang regexp package.
    #   # By example, "(!~)(?i)test" matches that the value does not contain "test" whatever the case is.
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: false
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     Basic configuration
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    # - name: "UserPlugin"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/external_plugins/user_plugin.so"
    #   code: |
    #     cGFja2FnZSBtYWluCgppbXBvcnQgKAoJYWRtaXNzaW9uICJrOHMuaW8vYXBpL2FkbWlzc2lvbi92
    #     MSIKCXYxICJrOHMuaW8vYXBpL2NvcmUvdjEiCgkiazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvcnVu
    #     dGltZSIKCSJnaXRodWIuY29tL3NtYXJ0LWR1Y2svdmVyYWRjbyIKCSJmbXQiCikKCnZhciAoCglu
    #     YW1lIHN0cmluZyA9ICJVc2VyUGx1Z2luIgopCgp0eXBlIFVzZXJQbHVnaW4gc3RydWN0IHsKCXN1
    #     bW1hcnkgc3RyaW5nCn0KCmZ1bmMgKHBsdWcgKlVzZXJQbHVnaW4pIEluaXQoY29uZmlnRmlsZSBz
    #     dHJpbmcpIHsKCXBsdWcuc3VtbWFyeSA9IGZtdC5TcHJpbnRmKCJDb25maWd1cmF0aW9uIG9mIHBs
    #     dWdpbiAlcyBpczogJXMiLCBuYW1lLCBjb25maWdGaWxlKQp9CgoKZnVuYyAocGx1ZyAqVXNlclBs
    #     dWdpbikgRXhlY3V0ZShrb2JqIHJ1bnRpbWUuT2JqZWN0LCBvcGVyYXRpb24gc3RyaW5nLCBkcnlS
    #     dW4gYm9vbCwgciAqYWRtaXNzaW9uLkFkbWlzc2lvblJlcXVlc3QpICgqYWRtaXNzaW9uY29udHJv
    #     bGxlci5SZXN1bHQsIGVycm9yKSB7Cglwb2QsIG9rIDo9IGtvYmouKCp2MS5Qb2QpCglpZiAhb2sg
    #     ewoJCXBsdWcuc3VtbWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIkt1YmVybmV0ZXMgcmVzb3Vy
    #     Y2UgaXMgbm90IGEgcG9kIGFzIGV4cGVjdGVkICglcykiLCBrb2JqLkdldE9iamVjdEtpbmQoKS5H
    #     cm91cFZlcnNpb25LaW5kKCkuS2luZCkKCQlyZXR1cm4gbmlsLCBmbXQuRXJyb3JmKCJLdWJlcm5l
    #     dGVzIHJlc291cmNlIGlzIG5vdCBhIHBvZCBhcyBleHBlY3RlZCAoJXMpIiwga29iai5HZXRPYmpl
    #     Y3RLaW5kKCkuR3JvdXBWZXJzaW9uS2luZCgpLktpbmQpCgl9IGVsc2UgewoJCXBsdWcuc3VtbWFy
    #     eSArPSAiXG4iICsgZm10LlNwcmludGYoIkFzIGV4cGVjdGVkIGl0IGlzIGEgcG9kOiAlcywgJXMs
    #     ICVzLCAlcyIsIHBvZC5UeXBlTWV0YS5LaW5kLAoJCXBvZC5UeXBlTWV0YS5BUElWZXJzaW9uLCBw
    #     b2QuT2JqZWN0TWV0YS5OYW1lLCBwb2QuT2JqZWN0TWV0YS5OYW1lc3BhY2UpCgoJCXBsdWcuc3Vt
    #     bWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIk51bWJlciBvZiBjb250YWluZXJzOiAlZCIsIGxl
    #     bihwb2QuU3BlYy5Db250YWluZXJzKSkKCX0KCglwbHVnLnN1bW1hcnkgKz0gIlxuIiArIGZtdC5T
    #     cHJpbnRmKCJQb2QgJXMsIGFjY2VwdGVkIiwgcG9kLk9iamVjdE1ldGEuTmFtZSkKCglyZXR1cm4g
    #     JmFkbWlzc2lvbmNvbnRyb2xsZXIuUmVzdWx0e0FsbG93ZWQ6IHRydWV9LCBuaWwKfQoKZnVuYyAo
    #     cGx1ZyAqVXNlclBsdWdpbikgU3VtbWFyeSgpIHN0cmluZyB7CglyZXR1cm4gcGx1Zy5zdW1tYXJ5
    #     Cn0KCi8vIGV4cG9ydGVkIGFzIHN5bWJvbCBuYW1lZCAiVmVyYWRjb1BsdWdpbiIKdmFyIFZlcmFk
    #     Y29QbHVnaW4gVXNlclBsdWdpbg==
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: false
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     UserPlugin configuration
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    # - name: "Generic"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-generic.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^(Pod|Secret|namespace|ServiceAccount|Service|DaemonSet|Deployment|ReplicaSet|DaemonSet|StatefulSet|Rollout|CronJob|Job)$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|DELETE|UPDATE|CONNECT"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: "(!~)kube-system|kube-public"
    #   # Filter only on resources having some labels.
    #   # value is a regular expressions
    #   # labels:
    #   # - key: owner
    #   #   # value: (?i)^me$
    #   #   value: "(!~)(?i)^me$"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     This plugin does not have configuration
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    # - name: "EnforceLabels"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-enforce_labels.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^(Pod|Secret|namespace|ServiceAccount|Service|DaemonSet|Deployment|ReplicaSet|DaemonSet|StatefulSet|Rollout|CronJob|Job)$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: "(!~)kube-system|kube-public"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     annotations: 
    #       owner: ^to.+
    #     labels: 
    #       nodegp: ^ng-.+
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    # - name: "HarborProxyCachePopulator"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-harbor_proxy_cache_populator.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     proxyCaches:
    #     - regexURL: "(^.+$)"
    #       replacementOCI: "https://harbor.registry.mine.io/v2/pxcache/$1/manifests/sha256"
    #       replacementArch: "https://harbor.registry.mine.io/v2/pxcache/$1/manifests/ARCHDIGEST"
    #       targetArch: "amd64"
    #       targetOS: "linux"
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    - name: "HarborProxyCachePopulator"
      # The path of the plugin.
      # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
      # For a built-in plugin the path is /app/plugins
      # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
      path: "/app/external_plugins/harbor_proxy_cache_populator.so"
      code: |
        cGFja2FnZSBtYWluCgppbXBvcnQgKAoJYWRtaXNzaW9uICJrOHMuaW8vYXBpL2FkbWlzc2lvbi92
        MSIKCXYxICJrOHMuaW8vYXBpL2NvcmUvdjEiCgkiazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvcnVu
        dGltZSIKCSJnaXRodWIuY29tL3NtYXJ0LWR1Y2svdmVyYWRjbyIKCSJnaXRodWIuY29tL3NtYXJ0
        LWR1Y2svdmVyYWRjby9rcmVzIgoJImZtdCIKCSJnb3BrZy5pbi95YW1sLnYzIgoJInJlZ2V4cCIK
        CSJzeW5jIgoJInRpbWUiCgkibWF0aC9yYW5kIgoKCSJuZXQvaHR0cCIKCSJjcnlwdG8vdGxzIgoJ
        ImVycm9ycyIKCSJvcyIKCSJlbmNvZGluZy9qc29uIgoJInN0cmluZ3MiCgoJImlvIgoKCWxvZyAi
        azhzLmlvL2tsb2cvdjIiCgoJLy8gbWV0YSAiazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvYXBpcy9t
        ZXRhL3YxIgopCgp2YXIgKAoJbmFtZSBzdHJpbmcgPSAiSGFyYm9yUHJveHlDYWNoZVBvcHVsYXRv
        ciIKKQoKdHlwZSBIYXJib3JQcm94eUNhY2hlUG9wdWxhdG9yIHN0cnVjdCB7CglQcm94eUNhY2hl
        cyBbXVByb3h5Q2FjaGUgYHlhbWw6InByb3h5Q2FjaGVzImAKCXN1bW1hcnkgc3RyaW5nIGB5YW1s
        OiItImAKCXByb2NlZWRlZEltYWdlcyAgICAgbWFwW3N0cmluZ11zdHJpbmcgYHlhbWw6Ii0iYAoJ
        cHJvY2VlZGVkSW1hZ2VzTG9jayBzeW5jLk11dGV4IGB5YW1sOiItImAKCXByb2NlZWRlZEltYWdl
        c05iICAgaW50IGB5YW1sOiItImAKfQoKdHlwZSBQcm94eUNhY2hlIHN0cnVjdCB7CglSZWdleFVS
        TCBzdHJpbmcgYHlhbWw6InJlZ2V4VVJMImAKCVJlcGxhY2VtZW50T0NJIHN0cmluZyBgeWFtbDoi
        cmVwbGFjZW1lbnRPQ0kiYAoJUmVwbGFjZW1lbnRBcmNoIHN0cmluZyBgeWFtbDoicmVwbGFjZW1l
        bnRBcmNoLG9taXRlbXB0eSJgCglUYXJnZXRBcmNoIHN0cmluZyBgeWFtbDoidGFyZ2V0QXJjaCJg
        CglUYXJnZXRPUyBzdHJpbmcgYHlhbWw6InRhcmdldE9TImAKfQoKLy8vLy8vLy8vLy8vLy8vLy8v
        LwovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8KLy8gRm9yIE9DSSBqc29u
        Ci8vLy8vLy8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8v
        Ly8vCnR5cGUgT0NJTWFuaWZlc3Qgc3RydWN0IHsgICAgIAoJTWVkaWFUeXBlIHN0cmluZyBganNv
        bjoibWVkaWFUeXBlImAKCVNjaGVtYVZlcnNpb24gaW50IGBqc29uOiJzY2hlbWFWZXJzaW9uImAK
        CU1hbmlmZXN0cyBbXURpZ2VzdFBsYXRmb3JtIGBqc29uOiJtYW5pZmVzdHMiYAp9Cgp0eXBlIERp
        Z2VzdFBsYXRmb3JtIHN0cnVjdCB7ICAgICAKCURpZ2VzdCBzdHJpbmcgYGpzb246ImRpZ2VzdCJg
        CglNZWRpYVR5cGUgc3RyaW5nIGBqc29uOiJtZWRpYVR5cGUiYAoJU2l6ZSBpbnQgYGpzb246InNp
        emUiYAoJUGxhdGZvcm0gUGxhdGZvcm0gYGpzb246InBsYXRmb3JtImAKfQoKdHlwZSBQbGF0Zm9y
        bSBzdHJ1Y3QgeyAgICAgCglBcmNoaXRlY3R1cmUgc3RyaW5nIGBqc29uOiJhcmNoaXRlY3R1cmUi
        YAoJT1Mgc3RyaW5nIGBqc29uOiJvcyJgCn0KLy8vLy8vLy8vLy8vLy8vLy8vLwovLy8vLy8vLy8v
        Ly8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8KLy8gRm9yIE9DSSBqc29uCi8vLy8vLy8vLy8v
        Ly8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vCgpmdW5jIChw
        bHVnICpIYXJib3JQcm94eUNhY2hlUG9wdWxhdG9yKSBJbml0KGNvbmZpZ0ZpbGUgc3RyaW5nKSBl
        cnJvciB7CgkvLyBDcmVhdGUgbWFwIG9mIGFscmVhZHkgc3VjY2Vzc2Z1bGx5IHByb2NlZWRlZCBp
        bWFnZXMKCXBsdWcucHJvY2VlZGVkSW1hZ2VzID0gbWFrZShtYXBbc3RyaW5nXXN0cmluZykKCS8v
        IExvYWQgY29uZmlndXJhdGlvbgoJZXJyIDo9IHlhbWwuVW5tYXJzaGFsKFtdYnl0ZShjb25maWdG
        aWxlKSwgcGx1ZykKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBlcnIKCX0KCWlmIGxlbihwbHVn
        LlByb3h5Q2FjaGVzKSA9PSAwIHsKCQlyZXR1cm4gZm10LkVycm9yZigiUHJveHlDYWNoZXMgbGlz
        dCBzaGFsbCBjb250YWluIGF0IGxlYXN0IG9uZSBlbGVtZW50IGZvciBwbHVnaW4gJXMiLCBuYW1l
        KQoJfQoJcmV0dXJuIG5pbAp9CgpmdW5jIChwbHVnICpIYXJib3JQcm94eUNhY2hlUG9wdWxhdG9y
        KSBFeGVjdXRlKGtvYmogcnVudGltZS5PYmplY3QsIG9wZXJhdGlvbiBzdHJpbmcsIGRyeVJ1biBi
        b29sLCByICphZG1pc3Npb24uQWRtaXNzaW9uUmVxdWVzdCkgKCphZG1pc3Npb25jb250cm9sbGVy
        LlJlc3VsdCwgZXJyb3IpIHsKCgkvLyBCb3RoIGVudmlyb25tZW50IHZhcmlhYmxlcyBoVVNFUiBh
        bmQgaFBXIHNoYWxsIGJlIGRlZmluZWQhISEKCV8sIG9rVXNlciA6PSBvcy5Mb29rdXBFbnYoImhV
        U0VSIikKCV8sIG9rUHcgOj0gb3MuTG9va3VwRW52KCJoUFciKQoKCWlmICEgb2tVc2VyIHx8ICEg
        b2tQdyB7CgkJcGx1Zy5zdW1tYXJ5ID0gZm10LlNwcmludGYoImhVU0VSIGFuZCBoUFcgZW52aXJv
        bm1lbnQgdmFyaWFibGVzIHNoYWxsIGJlIGRlZmluZWQiKQoJCXJldHVybiBuaWwsIGZtdC5FcnJv
        cmYoIkVycm9yOiAlcyIsIHBsdWcuc3VtbWFyeSkKCX0KCgkvLyBrb2JqIGlzIHN1cHBvc2VkIHRv
        IGJlIGEgcG9kLi4uCglwb2QsIG9rIDo9IGtvYmouKCp2MS5Qb2QpCglpZiAhb2sgewoJCXBsdWcu
        c3VtbWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIkt1YmVybmV0ZXMgcmVzb3VyY2UgaXMgbm90
        IGEgcG9kIGFzIGV4cGVjdGVkICglcykiLCBrb2JqLkdldE9iamVjdEtpbmQoKS5Hcm91cFZlcnNp
        b25LaW5kKCkuS2luZCkKCQkKCQlpZiBrb2JqLkdldE9iamVjdEtpbmQoKS5Hcm91cFZlcnNpb25L
        aW5kKCkuS2luZCA9PSAiUG9kIiB7CgkJCXBsdWcuc3VtbWFyeSArPSAiXG4iICsgZm10LlNwcmlu
        dGYoIkluIGZhY3QgaXQgaXMgYSBwb2QsIG1heWJlIHlvdSBkaWQgbm90IHVzZWQgdGhlIHBvZHMg
        cGF0aC4gVHJ5aW5nIHRvIGV4dHJhY3QgaXQgYWdhaW4uLi4iKQoJCQl2YXIgZXJyIGVycm9yCgkJ
        CXBvZCwgZXJyID0ga3Jlcy5QYXJzZVBvZChyKQoJCQlpZiBlcnIgIT0gbmlsIHsKCQkJCXBsdWcu
        c3VtbWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIkRlZmluaXRseSwgaXQgaXMgbm90IGEgcG9k
        ISIpCgkJCQlyZXR1cm4gbmlsLCBmbXQuRXJyb3JmKCJLdWJlcm5ldGVzIHJlc291cmNlIGlzIG5v
        dCBhIHBvZCBhcyBleHBlY3RlZCAoJXMpIiwga29iai5HZXRPYmplY3RLaW5kKCkuR3JvdXBWZXJz
        aW9uS2luZCgpLktpbmQpCgkJCX0KCQl9Cgl9CgoJcGx1Zy5zdW1tYXJ5ID0gZm10LlNwcmludGYo
        IkV4ZWN1dGUgcGx1Z2luICVzIiwgbmFtZSkKCgkvLyBCcm93c2UgSW5pdCBjb250YWluZXJzCglm
        b3IgXywgYyA6PSByYW5nZSBwb2QuU3BlYy5Jbml0Q29udGFpbmVycyB7CgkJcFByb3h5Q2FjaGUg
        Oj0gcGx1Zy5yZXRyaWV2ZUNvbmZpZ3VyYXRpb25JZkFueShjLkltYWdlKQoJCQoJCWlmIHBQcm94
        eUNhY2hlICE9IG5pbCB7CgkJCXBsdWcuc3VtbWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIkNo
        ZWNrIHRoYXQgaW1hZ2UgJXMgaXMgaW4gdGhlIHByb3h5IGNhY2hlIiwgYy5JbWFnZSkKCQkJZ28g
        cGx1Zy5wdWxsSW1hZ2UoYy5JbWFnZSwgKnBQcm94eUNhY2hlLCBkcnlSdW4pCgkJfQoJfQoKCS8v
        IEJyb3dzZSBjb250YWluZXJzCglmb3IgXywgYyA6PSByYW5nZSBwb2QuU3BlYy5Db250YWluZXJz
        IHsKCQlwUHJveHlDYWNoZSA6PSBwbHVnLnJldHJpZXZlQ29uZmlndXJhdGlvbklmQW55KGMuSW1h
        Z2UpCgkJCgkJaWYgcFByb3h5Q2FjaGUgIT0gbmlsIHsKCQkJcGx1Zy5zdW1tYXJ5ICs9ICJcbiIg
        KyBmbXQuU3ByaW50ZigiQ2hlY2sgdGhhdCBpbWFnZSAlcyBpcyBpbiB0aGUgcHJveHkgY2FjaGUi
        LCBjLkltYWdlKQoJCQlnbyBwbHVnLnB1bGxJbWFnZShjLkltYWdlLCAqcFByb3h5Q2FjaGUsIGRy
        eVJ1bikKCQl9Cgl9CgoJcmV0dXJuICZhZG1pc3Npb25jb250cm9sbGVyLlJlc3VsdHtBbGxvd2Vk
        OiB0cnVlfSwgbmlsCn0KCmZ1bmMgKHBsdWcgKkhhcmJvclByb3h5Q2FjaGVQb3B1bGF0b3IpIHJl
        dHJpZXZlQ29uZmlndXJhdGlvbklmQW55KHVybCBzdHJpbmcpICpQcm94eUNhY2hlIHsKCWZvciBf
        LCBwcm94eUNhY2hlIDo9IHJhbmdlIHBsdWcuUHJveHlDYWNoZXMgewoJCXJlIDo9IHJlZ2V4cC5N
        dXN0Q29tcGlsZShwcm94eUNhY2hlLlJlZ2V4VVJMKQoKCQlpZiByZS5NYXRjaFN0cmluZyh1cmwp
        IHsKCQkJcmV0dXJuICZwcm94eUNhY2hlCgkJfQoJfQoJcmV0dXJuIG5pbAp9CgpmdW5jIChwbHVn
        ICpIYXJib3JQcm94eUNhY2hlUG9wdWxhdG9yKSBwdWxsSW1hZ2UodXJsIHN0cmluZywgY29uZmln
        dXJhdGlvbiBQcm94eUNhY2hlLCBkcnlSdW4gYm9vbCkgewoJLy8gbG9nLkluZm9mKCI+Pj4+IFVS
        TDogJXMiLCB1cmwpCgkvLyBsb2cuSW5mb2YoIj4+Pj4gY29uZmlndXJhdGlvbjogJXYiLCBjb25m
        aWd1cmF0aW9uKQoJZm9yIHsKCQlwbHVnLnByb2NlZWRlZEltYWdlc0xvY2suTG9jaygpCgkJaWYg
        cGx1Zy5wcm9jZWVkZWRJbWFnZXNOYiA8IDEgewoJCQlicmVhawoJCX0KCQlwbHVnLnByb2NlZWRl
        ZEltYWdlc0xvY2suVW5sb2NrKCkKCQlsb2cuSW5mb2YoIldhaXQgZm9yIGEgc2xvdCBpcyBmcmVl
        ZCB0byBwdWxsICVzXG4iLCB1cmwpCgkJbG9nLkZsdXNoKCkKCQl0aW1lLlNsZWVwKDUgKiB0aW1l
        LlNlY29uZCkKCX0KCXBsdWcucHJvY2VlZGVkSW1hZ2VzTmIrKwoJZGVmZXIgZnVuYygpIHsKCQlw
        bHVnLnByb2NlZWRlZEltYWdlc0xvY2suTG9jaygpCgkJZGVmZXIgcGx1Zy5wcm9jZWVkZWRJbWFn
        ZXNMb2NrLlVubG9jaygpCgkJcGx1Zy5wcm9jZWVkZWRJbWFnZXNOYi0tCgl9KCkKCWlmIF8sIG9r
        IDo9IHBsdWcucHJvY2VlZGVkSW1hZ2VzW3VybF07ICFvayB7CgkJcGx1Zy5wcm9jZWVkZWRJbWFn
        ZXNbdXJsXSA9ICJwcm9jZWVkZWQiCgkJcGx1Zy5wcm9jZWVkZWRJbWFnZXNMb2NrLlVubG9jaygp
        CgkJdmFyIGVyclB1bGwgZXJyb3IgPSBuaWwKCQllcnJQdWxsID0gcHVsbEltYWdlRnJvbVByb3h5
        Q2FjaGUodXJsLCBjb25maWd1cmF0aW9uLlJlZ2V4VVJMLCBjb25maWd1cmF0aW9uLlJlcGxhY2Vt
        ZW50T0NJLCBjb25maWd1cmF0aW9uLlJlcGxhY2VtZW50QXJjaCwgY29uZmlndXJhdGlvbi5UYXJn
        ZXRBcmNoLCBjb25maWd1cmF0aW9uLlRhcmdldE9TLCBkcnlSdW4pCgkJCgkJaWYgZXJyUHVsbCAh
        PSBuaWwgewoJCQlsb2cuSW5mb2YoIkVycm9yIHB1bGxpbmcgaW1hZ2U6ICV2XG4iLCBlcnJQdWxs
        KQoJCQlsb2cuRmx1c2goKQoJCQlwbHVnLnByb2NlZWRlZEltYWdlc0xvY2suTG9jaygpCgkJCWRl
        ZmVyIHBsdWcucHJvY2VlZGVkSW1hZ2VzTG9jay5VbmxvY2soKQoJCQlkZWxldGUocGx1Zy5wcm9j
        ZWVkZWRJbWFnZXMsIHVybCkKCQl9Cgl9IGVsc2UgewoJCWxvZy5JbmZvZigiJXMgYWxyZWFkeSBt
        ZXRcbiIsIHVybCkKCQlsb2cuRmx1c2goKQoJCXBsdWcucHJvY2VlZGVkSW1hZ2VzTG9jay5Vbmxv
        Y2soKQoJfQp9CgpmdW5jIChwbHVnICpIYXJib3JQcm94eUNhY2hlUG9wdWxhdG9yKSBTdW1tYXJ5
        KCkgc3RyaW5nIHsKCXJldHVybiBwbHVnLnN1bW1hcnkKfQoKLy8gZXhwb3J0ZWQgYXMgc3ltYm9s
        IG5hbWVkICJWZXJhZGNvUGx1Z2luIgp2YXIgVmVyYWRjb1BsdWdpbiBIYXJib3JQcm94eUNhY2hl
        UG9wdWxhdG9yCgoKCi8vLy8vLy8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLwovLy8v
        Ly8vLy8vLy8vLy8vLy8vCi8vIFVzZWQgZm9yIGltcGxpY2l0IHB1bGwKLy8vLy8vLy8vLy8vLy8v
        Ly8vLwovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8KCmZ1bmMgcXVlcnlI
        YXJib3JEb2NrZXJBUEkodXJsIHN0cmluZykgKFtdYnl0ZSwgZXJyb3IpIHsKCXVzZXIgOj0gb3Mu
        R2V0ZW52KCJoVVNFUiIpCglwdyA6PSBvcy5HZXRlbnYoImhQVyIpCgoJY2xpZW50IDo9ICZodHRw
        LkNsaWVudHsKCQlUcmFuc3BvcnQ6ICZodHRwLlRyYW5zcG9ydHsKCQkJVExTQ2xpZW50Q29uZmln
        OiAmdGxzLkNvbmZpZ3tJbnNlY3VyZVNraXBWZXJpZnk6IHRydWV9LAoJCX0sCgl9CglyZXEsIGVy
        ciA6PSBodHRwLk5ld1JlcXVlc3QoaHR0cC5NZXRob2RHZXQsIHVybCwgbmlsKQoJaWYgZXJyICE9
        IG5pbCB7CgkJLy8gbG9nLkZhdGFsKGVycikKCQlyZXR1cm4gbmlsLCBlcnIKCX0KCglyZXEuU2V0
        QmFzaWNBdXRoKHVzZXIsIHB3KQoKCXJlc3AsIGVyciA6PSBjbGllbnQuRG8ocmVxKQoJaWYgZXJy
        ICE9IG5pbCB7CgkJLy8gbG9nLlByaW50ZigiRXJyb3JlZCB3aGVuIHNlbmRpbmcgcmVxdWVzdCB0
        byB0aGUgc2VydmVyOiAldlxuIiwgZXJyKQoJCXJldHVybiBuaWwsIGVycgoJfQoKCWRlZmVyIHJl
        c3AuQm9keS5DbG9zZSgpCgoJLy8gbG9nLlByaW50ZigicXVlcnlIYXJib3JEb2NrZXJBUEkgcmVz
        cC5TdGF0dXMgPSAldiIsIHJlc3AuU3RhdHVzKQoJLy8gbG9nLlByaW50bG4oc3RyaW5nKHJlc3Bv
        bnNlQm9keSkpCgoJaWYgcmVzcC5TdGF0dXNDb2RlID09IDIwMCB7CgkJcmVzcG9uc2VCb2R5LCBl
        cnIgOj0gaW8uUmVhZEFsbChyZXNwLkJvZHkpCgkJaWYgZXJyICE9IG5pbCB7CgkJCS8vIGxvZy5G
        YXRhbChlcnIpCgkJCXJldHVybiBuaWwsIGVycgoJCX0KCQlyZXR1cm4gcmVzcG9uc2VCb2R5LCBu
        aWwKCX0gZWxzZSB7CgkJcmV0dXJuIG5pbCwgZXJyb3JzLk5ldyhmbXQuU3ByaW50ZigiUmVxdWVz
        dCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAlZCIsIHJlc3AuU3RhdHVzQ29kZSkpCgl9Cgp9Cgpm
        dW5jIHB1bGxJbWFnZUZyb21Qcm94eUNhY2hlKHVybCBzdHJpbmcsIHJlZ2V4VVJMIHN0cmluZywg
        cmVwbGFjZW1lbnRPQ0kgc3RyaW5nLCByZXBsYWNlbWVudEFyY2ggc3RyaW5nLCB0YXJnZXRBcmNo
        IHN0cmluZywgdGFyZ2V0T1Mgc3RyaW5nLCBkcnlSdW4gYm9vbCkgKGVycm9yKSB7CgoJLy8gUHVs
        bGluZyBhbiBpbWFnZSBmcm9tIHByb3h5IGNhY2hlIHRyaWdnZXJzIHRoZSBwdWxsIGZyb20gdGhl
        IGNhY2hlZCByZWdpc3RyeSBpZiBub3QgYWxyZWFkeSBwcmVzZW50LgoKCUhBUkJPUlBDUF9ERUJV
        RyA6PSBvcy5HZXRlbnYoIkhBUkJPUlBDUF9ERUJVRyIpCgoJaWYgbGVuKEhBUkJPUlBDUF9ERUJV
        RykgPiAwIHsKCQlyYW5kLlNlZWQodGltZS5Ob3coKS5Vbml4TmFubygpKQoJCW4gOj0gNSArIHJh
        bmQuSW50bigxMCkKCQlsb2cuSW5mb2YoIj4+Pj4+PiBzaW11bGF0ZSBwdWxsSW1hZ2VGcm9tUHJv
        eHlDYWNoZSB0byBwdWxsICVzIC0gV2FpdCAlZCBzZWNvbmRzXG4iLHVybCwgbikKCQlsb2cuRmx1
        c2goKQogICAgdGltZS5TbGVlcCh0aW1lLkR1cmF0aW9uKG4pKnRpbWUuU2Vjb25kKQoJCXJldHVy
        biBuaWwKCX0KCgkvLyBodHRwczovL2hhcmJvci5yZWdpc3RyeS5taW5lLmlvL3YyL3Byb3h5X2Rv
        Y2tlci5pby9saWJyYXJ5L25naW54L21hbmlmZXN0cy8xLjIyLXBlcmwKCgkvLyBNb2RpZnkgdG8g
        aGFyYm9yIFVSTDoKCXJlIDo9IHJlZ2V4cC5NdXN0Q29tcGlsZShyZWdleFVSTCkKCgkvLyByZXBs
        YWNlbWVudE9DSSA6PSAiaHR0cHM6Ly9oYXJib3IucmVnaXN0cnkubWluZS5pby92Mi8kMS8kMi9t
        YW5pZmVzdHMvJDMiCgoJLy8gcmVwbGFjZW1lbnRBcmNoIDo9ICJodHRwczovL2hhcmJvci5yZWdp
        c3RyeS5taW5lLmlvL3YyLyQxLyQyL21hbmlmZXN0cy9BUkNIRElHRVNUIgoKCWlmICEgcmUuTWF0
        Y2hTdHJpbmcodXJsKSB7CgkJZXJyTXNnIDo9IGZtdC5TcHJpbnRmKCIlcyBVUkwgaXMgbm90IGFz
        IGF3YWl0ZWQiLCB1cmwpCgkJbG9nLkVycm9yKGVyck1zZykKCQlsb2cuRmx1c2goKQoJCXJldHVy
        biBlcnJvcnMuTmV3KGVyck1zZykKCX0KCgkvLyBRdWVyeSBhcmNoaXRlY3R1cmVzCgl1cmxPQ0kg
        Oj0gcmUuUmVwbGFjZUFsbFN0cmluZyh1cmwsIHJlcGxhY2VtZW50T0NJKQoKCXZhciByZXNwIFtd
        Ynl0ZQoJdmFyIGVyciBlcnJvcgoKCWlmIGRyeVJ1biAmJiBsZW4ocmVwbGFjZW1lbnRBcmNoKSA9
        PSAwIHsKCQlsb2cuSW5mb2YoIkRSWVJVTiAvIFNob3VsZCBxdWVyeSAlcyIsIHVybE9DSSkKCQls
        b2cuRmx1c2goKQoJfSBlbHNlIHsKCQkvLyByZXRyaWV2ZSBBTUQgNjQgZGlnZXN0CgkJcmVzcCwg
        ZXJyID0gcXVlcnlIYXJib3JEb2NrZXJBUEkodXJsT0NJKQoKCQlpZiBlcnIgIT0gbmlsIHsKCQkJ
        ZXJyTXNnIDo9IGZtdC5TcHJpbnRmKCJFcnJvciBxdWVyeWluZyAlcyBVUkw6ICV2IiwgdXJsT0NJ
        LCBlcnIpCgkJCWxvZy5FcnJvcihlcnJNc2cpCgkJCWxvZy5GbHVzaCgpCgkJCXJldHVybiBlcnJv
        cnMuTmV3KGVyck1zZykKCQl9CgkJLy8gZWxzZSB7CgkJLy8gCWxvZy5QcmludGYoIlJlc3A6ICVz
        XG4iLCBzdHJpbmcocmVzcCkpCgkJLy8gfQoKCX0KCQoJaWYgbGVuKHJlcGxhY2VtZW50QXJjaCkg
        PiAwIHsKCgkJLy8gdW5tYXJzaGFsbCByZXNwb25zZQoJCXZhciBvY2lNYW5pZmVzdCBPQ0lNYW5p
        ZmVzdAoJCWVyciA9IGpzb24uVW5tYXJzaGFsKHJlc3AsICZvY2lNYW5pZmVzdCkKCgkJaWYgZXJy
        ICE9IG5pbCB7CgkJCWVyck1zZyA6PSBmbXQuU3ByaW50ZigiVW5hYmxlIHRvIHVubWFyc2hhbCBq
        c29uIHJldHVybmVkIGJ5IFVSTCAlczogJXYiLCB1cmxPQ0ksIGVycikKCQkJbG9nLkVycm9yKGVy
        ck1zZykKCQkJbG9nLkZsdXNoKCkKCQkJcmV0dXJuIGVycm9ycy5OZXcoZXJyTXNnKQoJCX0KCgkJ
        Ly8gbG9nLkluZm9mKCJvY2lNYW5pZmVzdDogJXZcbiIsIG9jaU1hbmlmZXN0KQoKCQlkaWdlc3Qs
        IGVyciA6PSByZXRyaWV2ZVRhcmdldEFyY2hEaWdlc3Qob2NpTWFuaWZlc3QsIHRhcmdldEFyY2gs
        IHRhcmdldE9TKQoKCQlpZiBlcnIgIT0gbmlsIHsKCQkJZXJyTXNnIDo9IGZtdC5TcHJpbnRmKCIl
        diIsIGVycikKCQkJbG9nLkVycm9yKGVyck1zZykKCQkJbG9nLkZsdXNoKCkKCQkJcmV0dXJuIGVy
        cm9ycy5OZXcoZXJyTXNnKQoJCX0KCgkJLy8gUXVlcnkgdGFyZ2V0IGFyY2hpdGVjdHVyZSBpbWFn
        ZQoJCXVybFRhcmdldEltYWdlIDo9IHJlLlJlcGxhY2VBbGxTdHJpbmcodXJsLCByZXBsYWNlbWVu
        dEFyY2gpCgoJCXVybFRhcmdldEltYWdlID0gc3RyaW5ncy5SZXBsYWNlKHVybFRhcmdldEltYWdl
        LCAiQVJDSERJR0VTVCIsIGRpZ2VzdCwgLTEpCgoJCWlmICEgZHJ5UnVuIHsKCQkJbG9nLkluZm9m
        KCJ1cmxUYXJnZXRJbWFnZTogJXNcbiIsIHVybFRhcmdldEltYWdlKQoJCQlsb2cuRmx1c2goKQoJ
        CQkvLyB0YXJnZXQgYXJjaCBpbWFnZQoJCQlfLCBlcnIgPSBxdWVyeUhhcmJvckRvY2tlckFQSSh1
        cmxUYXJnZXRJbWFnZSkKCgkJCWlmIGVyciAhPSBuaWwgewoJCQkJZXJyTXNnIDo9IGZtdC5TcHJp
        bnRmKCJFcnJvciBxdWVyeWluZyAlcyBVUkw6ICV2IiwgdXJsVGFyZ2V0SW1hZ2UsIGVycikKCQkJ
        CWxvZy5FcnJvcihlcnJNc2cpCgkJCQlsb2cuRmx1c2goKQoJCQkJcmV0dXJuIGVycm9ycy5OZXco
        ZXJyTXNnKQoJCQl9CgkJfSBlbHNlIHsKCQkJbG9nLkluZm9mKCJEcnlSdW4gdXJsVGFyZ2V0SW1h
        Z2U6ICVzXG4iLCB1cmxUYXJnZXRJbWFnZSkKCQkJbG9nLkZsdXNoKCkKCQl9Cgl9CgoJcmV0dXJu
        IG5pbAp9CgpmdW5jIHJldHJpZXZlVGFyZ2V0QXJjaERpZ2VzdChvY2lNYW5pZmVzdCBPQ0lNYW5p
        ZmVzdCwgdGFyZ2V0QXJjaCBzdHJpbmcsIHRhcmdldE9TIHN0cmluZykgKHN0cmluZywgZXJyb3Ip
        IHsKCWZvciBfLCBkaWdlc3RQbGF0Zm9ybSA6PSByYW5nZSBvY2lNYW5pZmVzdC5NYW5pZmVzdHMg
        ewoJCWlmIGRpZ2VzdFBsYXRmb3JtLlBsYXRmb3JtLkFyY2hpdGVjdHVyZSA9PSAiYW1kNjQiICYm
        IGRpZ2VzdFBsYXRmb3JtLlBsYXRmb3JtLk9TID09ICJsaW51eCIgewoJCQlyZXR1cm4gZGlnZXN0
        UGxhdGZvcm0uRGlnZXN0LCBuaWwKCQl9Cgl9CgllcnJNc2cgOj0gZm10LlNwcmludGYoIlVuYWJs
        ZSB0byByZXRyaWV2ZSBkaWdlc3QgZm9yIGFyY2ggJXMgYW5kIE9TICVzIiwgdGFyZ2V0QXJjaCwg
        dGFyZ2V0T1MpCglsb2cuRXJyb3IoZXJyTXNnKQoJbG9nLkZsdXNoKCkKCXJldHVybiAiIiwgZXJy
        b3JzLk5ldyhlcnJNc2cpCn0KCi8vLy8vLy8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8v
        LwovLy8vLy8vLy8vLy8vLy8vLy8vCi8vIFVzZWQgZm9yIGltcGxpY2l0IHB1bGwKLy8vLy8vLy8v
        Ly8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8=
      # A regular expression to define the kinds on which the plugin is called
      kinds: "(?i)^Pod$"
      # A regular expression to define the operations on which the plugin is called
      # Example: "CREATE|UPDATE"
      # It's up to the plugin to manage different operations in its code
      operations: "CREATE|UPDATE"
      # A regular expression to define the namespaces in the scope of the plugin
      # Example: "kube-system|default"
      namespaces: ".*"
      # Filter only on resources having some labels.
      # Both key and value are regular expressions
      # Filter only on resources having some labels.
      # Both key and value are regular expressions
      # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
      dryRun: true
      # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
      configuration: |
        proxyCaches:
        - regexURL: "(^.+$)"
          replacementOCI: "https://harbor.registry.mine.io/v2/pxcache/$1/manifests/sha256"
          replacementArch: "https://harbor.registry.mine.io/v2/pxcache/$1/manifests/ARCHDIGEST"
          targetArch: "amd64"
          targetOS: "linux"
        # - regexURL: "^.*amazonaws.com/(proxy_[^:/]+)/([^:]+):(.+$)"
        #   replacementOCI: "https://harbor.registry.mine.io/v2/$1/$2/manifests/$3"
        #   replacementArch: "https://harbor.registry.mine.io/v2/$1/$2/manifests/ARCHDIGEST"
        #   targetArch: "amd64"
        #   targetOS: "linux"
      # A regular expression that define the scope of the plugin.
      # "Validating|Mutating" fits to both scopes
      scope: "Validating"

    # - name: "AddDummySidecar"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-add_dummy_sidecar.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: "(!~)kube-system|kube-public"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     annotations: 
    #       owner: ^to.+
    #     labels: 
    #       nodegp: ^ng-.+
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Mutating"

    # - name: "ForbidTag"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-forbid_tag.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: "(!~)kube-system|kube-public"
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     tagToForbid: "(?i):latest$"
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    # - name: "RegistryCacheExt"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/external_plugins/registry_cache.so"
    #   code: |
    #     cGFja2FnZSBtYWluCgppbXBvcnQgKAoJYWRtaXNzaW9uICJrOHMuaW8vYXBpL2FkbWlzc2lvbi92
    #     MSIKCXYxICJrOHMuaW8vYXBpL2NvcmUvdjEiCgkiazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvcnVu
    #     dGltZSIKCSJnaXRodWIuY29tL3NtYXJ0LWR1Y2svdmVyYWRjbyIKCSJmbXQiCgkiZ29wa2cuaW4v
    #     eWFtbC52MyIKCSJyZWdleHAiCgkvLyBtZXRhICJrOHMuaW8vYXBpbWFjaGluZXJ5L3BrZy9hcGlz
    #     L21ldGEvdjEiCikKCnZhciAoCgluYW1lIHN0cmluZyA9ICJSZWdpc3RyeUNhY2hlIgopCgp0eXBl
    #     IEZpbmRSZXBsYWNlIHN0cnVjdCB7CglGaW5kIHN0cmluZyBgeWFtbDoiZmluZCJgCglSZXBsYWNl
    #     IHN0cmluZyBgeWFtbDoicmVwbGFjZSJgCn0KCnR5cGUgUmVnaXN0cnlDYWNoZSBzdHJ1Y3QgewoJ
    #     UmVwbGFjZW1lbnRzIFtdRmluZFJlcGxhY2UgYHlhbWw6InJlcGxhY2VtZW50cyJgCglzdW1tYXJ5
    #     IHN0cmluZyBgeWFtbDoiLSJgCn0KCmZ1bmMgKHBsdWcgKlJlZ2lzdHJ5Q2FjaGUpIEluaXQoY29u
    #     ZmlnRmlsZSBzdHJpbmcpIGVycm9yIHsKCS8vIExvYWQgY29uZmlndXJhdGlvbgoJZXJyIDo9IHlh
    #     bWwuVW5tYXJzaGFsKFtdYnl0ZShjb25maWdGaWxlKSwgcGx1ZykKCWlmIGVyciAhPSBuaWwgewoJ
    #     CXJldHVybiBlcnIKCX0KCWlmIGxlbihwbHVnLlJlcGxhY2VtZW50cykgPT0gMCB7CgkJcmV0dXJu
    #     IGZtdC5FcnJvcmYoIlJlcGxhY2VtZW50cyBsaXN0IHNoYWxsIGNvbnRhaW4gYXQgbGVhc3Qgb25l
    #     IGVsZW1lbnQgZm9yIHBsdWdpbiAlcyIsIG5hbWUpCgl9CglyZXR1cm4gbmlsCn0KCgpmdW5jIChw
    #     bHVnICpSZWdpc3RyeUNhY2hlKSBFeGVjdXRlKGtvYmogcnVudGltZS5PYmplY3QsIG9wZXJhdGlv
    #     biBzdHJpbmcsIGRyeVJ1biBib29sLCByICphZG1pc3Npb24uQWRtaXNzaW9uUmVxdWVzdCkgKCph
    #     ZG1pc3Npb25jb250cm9sbGVyLlJlc3VsdCwgZXJyb3IpIHsKCgkvLyBrb2JqIGlzIHN1cHBvc2Vk
    #     IHRvIGJlIGEgcG9kLi4uCglwb2QsIG9rIDo9IGtvYmouKCp2MS5Qb2QpCglpZiAhb2sgewoJCXBs
    #     dWcuc3VtbWFyeSArPSBmbXQuU3ByaW50ZigiS3ViZXJuZXRlcyByZXNvdXJjZSBpcyBub3QgYSBw
    #     b2QgYXMgZXhwZWN0ZWQgKCVzKSIsIGtvYmouR2V0T2JqZWN0S2luZCgpLkdyb3VwVmVyc2lvbktp
    #     bmQoKS5LaW5kKQoJCXJldHVybiBuaWwsIGZtdC5FcnJvcmYoIkt1YmVybmV0ZXMgcmVzb3VyY2Ug
    #     aXMgbm90IGEgcG9kIGFzIGV4cGVjdGVkICglcykiLCBrb2JqLkdldE9iamVjdEtpbmQoKS5Hcm91
    #     cFZlcnNpb25LaW5kKCkuS2luZCkKCX0KCgl2YXIgb3BlcmF0aW9ucyBbXWFkbWlzc2lvbmNvbnRy
    #     b2xsZXIuUGF0Y2hPcGVyYXRpb24KCglwbHVnLnN1bW1hcnkgPSBmbXQuU3ByaW50ZigiRXhlY3V0
    #     ZSBwbHVnaW4gJXMiLCBuYW1lKQoKCS8vIEJyb3dzZSBjb250YWluZXJzCglmb3IgaSwgYyA6PSBy
    #     YW5nZSBwb2QuU3BlYy5Db250YWluZXJzIHsKCQkvLyBCcm93c2UgcmVwbGFjZW1lbnRzCgkJZm9y
    #     IF8sIG9wIDo9IHJhbmdlIHBsdWcuUmVwbGFjZW1lbnRzIHsKCQkJZmluZCA6PSBvcC5GaW5kCgkJ
    #     CXJlcGxhY2UgOj0gb3AuUmVwbGFjZQoJCQkKCQkJcmUgOj0gcmVnZXhwLk11c3RDb21waWxlKGZp
    #     bmQpCgkJCWltZyA6PSBjLkltYWdlCgkJCWlmIHJlLk1hdGNoU3RyaW5nKGltZykgewoJCQkJaW1n
    #     TmV3IDo9IHJlLlJlcGxhY2VBbGxTdHJpbmcoaW1nLCByZXBsYWNlKQoJCQkJLy8gYWRkIHJlcGxh
    #     Y2UgcGF0Y2gKCQkJCXJlcGxhY2VPcCA6PSBhZG1pc3Npb25jb250cm9sbGVyLlJlcGxhY2VQYXRj
    #     aE9wZXJhdGlvbihmbXQuU3ByaW50ZigiL3NwZWMvY29udGFpbmVycy8lZC9pbWFnZSIsIGkpLCBp
    #     bWdOZXcpCgkJCQlvcGVyYXRpb25zID0gYXBwZW5kKG9wZXJhdGlvbnMsIHJlcGxhY2VPcCkKCQkJ
    #     CXBsdWcuc3VtbWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIkFkZCByZXBhY2VtZW50IG9wZXJh
    #     dGlvbiAldiIsIHJlcGxhY2VPcCkKCQkJCWJyZWFrCgkJCX0KCQl9Cgl9CgoJcmV0dXJuICZhZG1p
    #     c3Npb25jb250cm9sbGVyLlJlc3VsdHsKCQlBbGxvd2VkOiAgdHJ1ZSwKCQlQYXRjaE9wczogb3Bl
    #     cmF0aW9ucywKCX0sIG5pbAp9CgpmdW5jIChwbHVnICpSZWdpc3RyeUNhY2hlKSBTdW1tYXJ5KCkg
    #     c3RyaW5nIHsKCXJldHVybiBwbHVnLnN1bW1hcnkKfQoKLy8gZXhwb3J0ZWQgYXMgc3ltYm9sIG5h
    #     bWVkICJWZXJhZGNvUGx1Z2luIgp2YXIgVmVyYWRjb1BsdWdpbiBSZWdpc3RyeUNhY2hl
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE|DELETE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: false
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     replacements:
    #     - find: "(^[^:/]+$)"
    #       replace: "registry.hub.docker.com/library/$1:latest"
    #     - find: "^([^:/]+:[^:/]+)$"
    #       replace: "registry.hub.docker.com/library/$1"
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Mutating"

    # - name: "RegistryCache"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-registry_cache.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: false
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     replacements:
    #     - find: "(^[^:/]+$)"
    #       replace: "registry.hub.docker.com/library/$1:latest"
    #     - find: "^([^:/]+:[^:/]+)$"
    #       replace: "registry.hub.docker.com/library/$1"
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Mutating"