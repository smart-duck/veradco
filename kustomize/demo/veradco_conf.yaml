apiVersion: v1
kind: ConfigMap
metadata:
  name: veradco
  namespace: veradco
data:
  veradco.yaml: |
    failOnPluginLoadingFails: true
    plugins:
    # - name: "Basic"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-basic.so"
    #   # It is possible to make your regular expression act as a reverse pattern. To do so, just prefix it with (!~)
    #   # Except that, it works as defined in the Golang regexp package.
    #   # By example, "(!~)(?i)test" matches that the value does not contain "test" whatever the case is.
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: false
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     Basic configuration
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    # - name: "UserPlugin"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/external_plugins/user_plugin.so"
    #   code: |
    #     cGFja2FnZSBtYWluCgppbXBvcnQgKAoJYWRtaXNzaW9uICJrOHMuaW8vYXBpL2FkbWlzc2lvbi92
    #     MSIKCXYxICJrOHMuaW8vYXBpL2NvcmUvdjEiCgkiazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvcnVu
    #     dGltZSIKCSJnaXRodWIuY29tL3NtYXJ0LWR1Y2svdmVyYWRjbyIKCSJmbXQiCikKCnZhciAoCglu
    #     YW1lIHN0cmluZyA9ICJVc2VyUGx1Z2luIgopCgp0eXBlIFVzZXJQbHVnaW4gc3RydWN0IHsKCXN1
    #     bW1hcnkgc3RyaW5nCn0KCmZ1bmMgKHBsdWcgKlVzZXJQbHVnaW4pIEluaXQoY29uZmlnRmlsZSBz
    #     dHJpbmcpIHsKCXBsdWcuc3VtbWFyeSA9IGZtdC5TcHJpbnRmKCJDb25maWd1cmF0aW9uIG9mIHBs
    #     dWdpbiAlcyBpczogJXMiLCBuYW1lLCBjb25maWdGaWxlKQp9CgoKZnVuYyAocGx1ZyAqVXNlclBs
    #     dWdpbikgRXhlY3V0ZShrb2JqIHJ1bnRpbWUuT2JqZWN0LCBvcGVyYXRpb24gc3RyaW5nLCBkcnlS
    #     dW4gYm9vbCwgciAqYWRtaXNzaW9uLkFkbWlzc2lvblJlcXVlc3QpICgqYWRtaXNzaW9uY29udHJv
    #     bGxlci5SZXN1bHQsIGVycm9yKSB7Cglwb2QsIG9rIDo9IGtvYmouKCp2MS5Qb2QpCglpZiAhb2sg
    #     ewoJCXBsdWcuc3VtbWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIkt1YmVybmV0ZXMgcmVzb3Vy
    #     Y2UgaXMgbm90IGEgcG9kIGFzIGV4cGVjdGVkICglcykiLCBrb2JqLkdldE9iamVjdEtpbmQoKS5H
    #     cm91cFZlcnNpb25LaW5kKCkuS2luZCkKCQlyZXR1cm4gbmlsLCBmbXQuRXJyb3JmKCJLdWJlcm5l
    #     dGVzIHJlc291cmNlIGlzIG5vdCBhIHBvZCBhcyBleHBlY3RlZCAoJXMpIiwga29iai5HZXRPYmpl
    #     Y3RLaW5kKCkuR3JvdXBWZXJzaW9uS2luZCgpLktpbmQpCgl9IGVsc2UgewoJCXBsdWcuc3VtbWFy
    #     eSArPSAiXG4iICsgZm10LlNwcmludGYoIkFzIGV4cGVjdGVkIGl0IGlzIGEgcG9kOiAlcywgJXMs
    #     ICVzLCAlcyIsIHBvZC5UeXBlTWV0YS5LaW5kLAoJCXBvZC5UeXBlTWV0YS5BUElWZXJzaW9uLCBw
    #     b2QuT2JqZWN0TWV0YS5OYW1lLCBwb2QuT2JqZWN0TWV0YS5OYW1lc3BhY2UpCgoJCXBsdWcuc3Vt
    #     bWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIk51bWJlciBvZiBjb250YWluZXJzOiAlZCIsIGxl
    #     bihwb2QuU3BlYy5Db250YWluZXJzKSkKCX0KCglwbHVnLnN1bW1hcnkgKz0gIlxuIiArIGZtdC5T
    #     cHJpbnRmKCJQb2QgJXMsIGFjY2VwdGVkIiwgcG9kLk9iamVjdE1ldGEuTmFtZSkKCglyZXR1cm4g
    #     JmFkbWlzc2lvbmNvbnRyb2xsZXIuUmVzdWx0e0FsbG93ZWQ6IHRydWV9LCBuaWwKfQoKZnVuYyAo
    #     cGx1ZyAqVXNlclBsdWdpbikgU3VtbWFyeSgpIHN0cmluZyB7CglyZXR1cm4gcGx1Zy5zdW1tYXJ5
    #     Cn0KCi8vIGV4cG9ydGVkIGFzIHN5bWJvbCBuYW1lZCAiVmVyYWRjb1BsdWdpbiIKdmFyIFZlcmFk
    #     Y29QbHVnaW4gVXNlclBsdWdpbg==
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: false
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     UserPlugin configuration
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    - name: "Generic"
      # The path of the plugin.
      # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
      # For a built-in plugin the path is /app/plugins
      # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
      path: "/app/plugins/built-in-generic.so"
      endpoints: "/validate/others"
      # A regular expression to define the kinds on which the plugin is called
      kinds: "(?i)^(Pod|Secret|namespace|ServiceAccount|Service|DaemonSet|Deployment|ReplicaSet|DaemonSet|StatefulSet|Rollout|CronJob|Job)$"
      # A regular expression to define the operations on which the plugin is called
      # Example: "CREATE|UPDATE"
      # It's up to the plugin to manage different operations in its code
      operations: "CREATE|DELETE|UPDATE|CONNECT"
      # A regular expression to define the namespaces in the scope of the plugin
      # Example: "kube-system|default"
      namespaces: "(!~)kube-system|kube-public"
      # Filter only on resources having some labels.
      # value is a regular expressions
      # labels:
      # - key: owner
      #   # value: (?i)^me$
      #   value: "(!~)(?i)^me$"
      # Filter only on resources having some labels.
      # Both key and value are regular expressions
      # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
      dryRun: true
      # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
      configuration: |
        This plugin does not have configuration
      # A regular expression that define the scope of the plugin.
      # "Validating|Mutating" fits to both scopes
      scope: "Validating"

    # - name: "EnforceLabels"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-enforce_labels.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^(Pod|Secret|namespace|ServiceAccount|Service|DaemonSet|Deployment|ReplicaSet|DaemonSet|StatefulSet|Rollout|CronJob|Job)$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: "(!~)kube-system|kube-public"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     annotations: 
    #       owner: ^to.+
    #     labels: 
    #       nodegp: ^ng-.+
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    # - name: "HarborProxyCachePopulator"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-harbor_proxy_cache_populator.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     proxyCaches:
    #     - regexURL: "(^.+$)"
    #       replacementOCI: "https://harbor.registry.mine.io/v2/pxcache/$1/manifests/sha256"
    #       replacementArch: "https://harbor.registry.mine.io/v2/pxcache/$1/manifests/ARCHDIGEST"
    #       targetArch: "amd64"
    #       targetOS: "linux"
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    - name: "HarborProxyCachePopulator"
      # The path of the plugin.
      # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
      # For a built-in plugin the path is /app/plugins
      # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
      endpoints: "/validate/pods"
      path: "/app/external_plugins/harbor_proxy_cache_populator.so"
      code: |
        cGFja2FnZSBtYWluCgppbXBvcnQgKAoJYWRtaXNzaW9uICJrOHMuaW8vYXBpL2FkbWlzc2lvbi92
        MSIKCXYxICJrOHMuaW8vYXBpL2NvcmUvdjEiCgkiazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvcnVu
        dGltZSIKCSJnaXRodWIuY29tL3NtYXJ0LWR1Y2svdmVyYWRjbyIKCSJnaXRodWIuY29tL3NtYXJ0
        LWR1Y2svdmVyYWRjby9rcmVzIgoJImZtdCIKCSJnb3BrZy5pbi95YW1sLnYzIgoJInJlZ2V4cCIK
        CSJzeW5jIgoJInRpbWUiCgkibWF0aC9yYW5kIgoKCSJuZXQvaHR0cCIKCSJjcnlwdG8vdGxzIgoJ
        ImVycm9ycyIKCSJvcyIKCSJlbmNvZGluZy9qc29uIgoJInN0cmluZ3MiCgoJImlvIgoKCWxvZyAi
        azhzLmlvL2tsb2cvdjIiCgoJLy8gbWV0YSAiazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvYXBpcy9t
        ZXRhL3YxIgopCgp2YXIgKAoJbmFtZSBzdHJpbmcgPSAiSGFyYm9yUHJveHlDYWNoZVBvcHVsYXRv
        ciIKKQoKdHlwZSBIYXJib3JQcm94eUNhY2hlUG9wdWxhdG9yIHN0cnVjdCB7CglQcm94eUNhY2hl
        cyBbXVByb3h5Q2FjaGUgYHlhbWw6InByb3h5Q2FjaGVzImAKCU1heE51bWJlck9mUGFyYWxsZWxK
        b2JzIGludCBgeWFtbDoibWF4TnVtYmVyT2ZQYXJhbGxlbEpvYnMiYAoJc3VtbWFyeSBzdHJpbmcg
        YHlhbWw6Ii0iYAoJcHJvY2VlZGVkSW1hZ2VzICAgICBtYXBbc3RyaW5nXXN0cmluZyBgeWFtbDoi
        LSJgCglwcm9jZWVkZWRJbWFnZXNMb2NrIHN5bmMuTXV0ZXggYHlhbWw6Ii0iYAoJcHJvY2VlZGVk
        SW1hZ2VzTmIgICBpbnQgYHlhbWw6Ii0iYAp9Cgp0eXBlIFByb3h5Q2FjaGUgc3RydWN0IHsKCVJl
        Z2V4VVJMIHN0cmluZyBgeWFtbDoicmVnZXhVUkwiYAoJUmVwbGFjZW1lbnRPQ0kgc3RyaW5nIGB5
        YW1sOiJyZXBsYWNlbWVudE9DSSJgCglSZXBsYWNlbWVudEFyY2ggc3RyaW5nIGB5YW1sOiJyZXBs
        YWNlbWVudEFyY2gsb21pdGVtcHR5ImAKCVRhcmdldEFyY2ggc3RyaW5nIGB5YW1sOiJ0YXJnZXRB
        cmNoImAKCVRhcmdldE9TIHN0cmluZyBgeWFtbDoidGFyZ2V0T1MiYAp9CgovLy8vLy8vLy8vLy8v
        Ly8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLwovLyBGb3IgT0NJ
        IGpzb24KLy8vLy8vLy8vLy8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8v
        Ly8vLy8vLy8KdHlwZSBPQ0lNYW5pZmVzdCBzdHJ1Y3QgeyAgICAgCglNZWRpYVR5cGUgc3RyaW5n
        IGBqc29uOiJtZWRpYVR5cGUiYAoJU2NoZW1hVmVyc2lvbiBpbnQgYGpzb246InNjaGVtYVZlcnNp
        b24iYAoJTWFuaWZlc3RzIFtdRGlnZXN0UGxhdGZvcm0gYGpzb246Im1hbmlmZXN0cyJgCn0KCnR5
        cGUgRGlnZXN0UGxhdGZvcm0gc3RydWN0IHsgICAgIAoJRGlnZXN0IHN0cmluZyBganNvbjoiZGln
        ZXN0ImAKCU1lZGlhVHlwZSBzdHJpbmcgYGpzb246Im1lZGlhVHlwZSJgCglTaXplIGludCBganNv
        bjoic2l6ZSJgCglQbGF0Zm9ybSBQbGF0Zm9ybSBganNvbjoicGxhdGZvcm0iYAp9Cgp0eXBlIFBs
        YXRmb3JtIHN0cnVjdCB7ICAgICAKCUFyY2hpdGVjdHVyZSBzdHJpbmcgYGpzb246ImFyY2hpdGVj
        dHVyZSJgCglPUyBzdHJpbmcgYGpzb246Im9zImAKfQovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8v
        Ly8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLwovLyBGb3IgT0NJIGpzb24KLy8vLy8v
        Ly8vLy8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8KCmZ1
        bmMgKHBsdWcgKkhhcmJvclByb3h5Q2FjaGVQb3B1bGF0b3IpIEluaXQoY29uZmlnRmlsZSBzdHJp
        bmcpIGVycm9yIHsKCS8vIENyZWF0ZSBtYXAgb2YgYWxyZWFkeSBzdWNjZXNzZnVsbHkgcHJvY2Vl
        ZGVkIGltYWdlcwoJcGx1Zy5wcm9jZWVkZWRJbWFnZXMgPSBtYWtlKG1hcFtzdHJpbmddc3RyaW5n
        KQoJLy8gTG9hZCBjb25maWd1cmF0aW9uCgllcnIgOj0geWFtbC5Vbm1hcnNoYWwoW11ieXRlKGNv
        bmZpZ0ZpbGUpLCBwbHVnKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIGVycgoJfQoJaWYgbGVu
        KHBsdWcuUHJveHlDYWNoZXMpID09IDAgewoJCXJldHVybiBmbXQuRXJyb3JmKCJQcm94eUNhY2hl
        cyBsaXN0IHNoYWxsIGNvbnRhaW4gYXQgbGVhc3Qgb25lIGVsZW1lbnQgZm9yIHBsdWdpbiAlcyIs
        IG5hbWUpCgl9CglyZXR1cm4gbmlsCn0KCmZ1bmMgKHBsdWcgKkhhcmJvclByb3h5Q2FjaGVQb3B1
        bGF0b3IpIEV4ZWN1dGUoa29iaiBydW50aW1lLk9iamVjdCwgb3BlcmF0aW9uIHN0cmluZywgZHJ5
        UnVuIGJvb2wsIHIgKmFkbWlzc2lvbi5BZG1pc3Npb25SZXF1ZXN0KSAoKmFkbWlzc2lvbmNvbnRy
        b2xsZXIuUmVzdWx0LCBlcnJvcikgewoKCS8vIEJvdGggZW52aXJvbm1lbnQgdmFyaWFibGVzIGhV
        U0VSIGFuZCBoUFcgc2hhbGwgYmUgZGVmaW5lZCEhIQoJXywgb2tVc2VyIDo9IG9zLkxvb2t1cEVu
        digiaFVTRVIiKQoJXywgb2tQdyA6PSBvcy5Mb29rdXBFbnYoImhQVyIpCgoJaWYgISBva1VzZXIg
        fHwgISBva1B3IHsKCQlwbHVnLnN1bW1hcnkgPSBmbXQuU3ByaW50ZigiaFVTRVIgYW5kIGhQVyBl
        bnZpcm9ubWVudCB2YXJpYWJsZXMgc2hhbGwgYmUgZGVmaW5lZCIpCgkJcmV0dXJuIG5pbCwgZm10
        LkVycm9yZigiRXJyb3I6ICVzIiwgcGx1Zy5zdW1tYXJ5KQoJfQoKCS8vIGtvYmogaXMgc3VwcG9z
        ZWQgdG8gYmUgYSBwb2QuLi4KCXBvZCwgb2sgOj0ga29iai4oKnYxLlBvZCkKCWlmICFvayB7CgkJ
        cGx1Zy5zdW1tYXJ5ICs9ICJcbiIgKyBmbXQuU3ByaW50ZigiS3ViZXJuZXRlcyByZXNvdXJjZSBp
        cyBub3QgYSBwb2QgYXMgZXhwZWN0ZWQgKCVzKSIsIGtvYmouR2V0T2JqZWN0S2luZCgpLkdyb3Vw
        VmVyc2lvbktpbmQoKS5LaW5kKQoJCQoJCWlmIGtvYmouR2V0T2JqZWN0S2luZCgpLkdyb3VwVmVy
        c2lvbktpbmQoKS5LaW5kID09ICJQb2QiIHsKCQkJcGx1Zy5zdW1tYXJ5ICs9ICJcbiIgKyBmbXQu
        U3ByaW50ZigiSW4gZmFjdCBpdCBpcyBhIHBvZCwgbWF5YmUgeW91IGRpZCBub3QgdXNlZCB0aGUg
        cG9kcyBwYXRoLiBUcnlpbmcgdG8gZXh0cmFjdCBpdCBhZ2Fpbi4uLiIpCgkJCXZhciBlcnIgZXJy
        b3IKCQkJcG9kLCBlcnIgPSBrcmVzLlBhcnNlUG9kKHIpCgkJCWlmIGVyciAhPSBuaWwgewoJCQkJ
        cGx1Zy5zdW1tYXJ5ICs9ICJcbiIgKyBmbXQuU3ByaW50ZigiRGVmaW5pdGx5LCBpdCBpcyBub3Qg
        YSBwb2QhIikKCQkJCXJldHVybiBuaWwsIGZtdC5FcnJvcmYoIkt1YmVybmV0ZXMgcmVzb3VyY2Ug
        aXMgbm90IGEgcG9kIGFzIGV4cGVjdGVkICglcykiLCBrb2JqLkdldE9iamVjdEtpbmQoKS5Hcm91
        cFZlcnNpb25LaW5kKCkuS2luZCkKCQkJfQoJCX0KCX0KCglwbHVnLnN1bW1hcnkgPSBmbXQuU3By
        aW50ZigiRXhlY3V0ZSBwbHVnaW4gJXMiLCBuYW1lKQoKCS8vIEJyb3dzZSBJbml0IGNvbnRhaW5l
        cnMKCWZvciBfLCBjIDo9IHJhbmdlIHBvZC5TcGVjLkluaXRDb250YWluZXJzIHsKCQlwUHJveHlD
        YWNoZSA6PSBwbHVnLnJldHJpZXZlQ29uZmlndXJhdGlvbklmQW55KGMuSW1hZ2UpCgkJCgkJaWYg
        cFByb3h5Q2FjaGUgIT0gbmlsIHsKCQkJcGx1Zy5zdW1tYXJ5ICs9ICJcbiIgKyBmbXQuU3ByaW50
        ZigiQ2hlY2sgdGhhdCBpbWFnZSAlcyBpcyBpbiB0aGUgcHJveHkgY2FjaGUiLCBjLkltYWdlKQoJ
        CQlnbyBwbHVnLnB1bGxJbWFnZShjLkltYWdlLCAqcFByb3h5Q2FjaGUsIGRyeVJ1bikKCQl9Cgl9
        CgoJLy8gQnJvd3NlIGNvbnRhaW5lcnMKCWZvciBfLCBjIDo9IHJhbmdlIHBvZC5TcGVjLkNvbnRh
        aW5lcnMgewoJCXBQcm94eUNhY2hlIDo9IHBsdWcucmV0cmlldmVDb25maWd1cmF0aW9uSWZBbnko
        Yy5JbWFnZSkKCQkKCQlpZiBwUHJveHlDYWNoZSAhPSBuaWwgewoJCQlwbHVnLnN1bW1hcnkgKz0g
        IlxuIiArIGZtdC5TcHJpbnRmKCJDaGVjayB0aGF0IGltYWdlICVzIGlzIGluIHRoZSBwcm94eSBj
        YWNoZSIsIGMuSW1hZ2UpCgkJCWdvIHBsdWcucHVsbEltYWdlKGMuSW1hZ2UsICpwUHJveHlDYWNo
        ZSwgZHJ5UnVuKQoJCX0KCX0KCglyZXR1cm4gJmFkbWlzc2lvbmNvbnRyb2xsZXIuUmVzdWx0e0Fs
        bG93ZWQ6IHRydWV9LCBuaWwKfQoKZnVuYyAocGx1ZyAqSGFyYm9yUHJveHlDYWNoZVBvcHVsYXRv
        cikgcmV0cmlldmVDb25maWd1cmF0aW9uSWZBbnkodXJsIHN0cmluZykgKlByb3h5Q2FjaGUgewoJ
        Zm9yIF8sIHByb3h5Q2FjaGUgOj0gcmFuZ2UgcGx1Zy5Qcm94eUNhY2hlcyB7CgkJcmUgOj0gcmVn
        ZXhwLk11c3RDb21waWxlKHByb3h5Q2FjaGUuUmVnZXhVUkwpCgoJCWlmIHJlLk1hdGNoU3RyaW5n
        KHVybCkgewoJCQlyZXR1cm4gJnByb3h5Q2FjaGUKCQl9Cgl9CglyZXR1cm4gbmlsCn0KCmZ1bmMg
        KHBsdWcgKkhhcmJvclByb3h5Q2FjaGVQb3B1bGF0b3IpIHB1bGxJbWFnZSh1cmwgc3RyaW5nLCBj
        b25maWd1cmF0aW9uIFByb3h5Q2FjaGUsIGRyeVJ1biBib29sKSB7CgkvLyBsb2cuSW5mb2YoIj4+
        Pj4gVVJMOiAlcyIsIHVybCkKCS8vIGxvZy5JbmZvZigiPj4+PiBjb25maWd1cmF0aW9uOiAldiIs
        IGNvbmZpZ3VyYXRpb24pCglmb3IgewoJCXBsdWcucHJvY2VlZGVkSW1hZ2VzTG9jay5Mb2NrKCkK
        CQlpZiBwbHVnLnByb2NlZWRlZEltYWdlc05iIDwgcGx1Zy5NYXhOdW1iZXJPZlBhcmFsbGVsSm9i
        cyB7CgkJCWJyZWFrCgkJfQoJCXBsdWcucHJvY2VlZGVkSW1hZ2VzTG9jay5VbmxvY2soKQoJCWxv
        Zy5JbmZvZigiV2FpdCBmb3IgYSBzbG90IGlzIGZyZWVkIHRvIHB1bGwgJXNcbiIsIHVybCkKCQls
        b2cuRmx1c2goKQoJCXRpbWUuU2xlZXAoNSAqIHRpbWUuU2Vjb25kKQoJfQoJcGx1Zy5wcm9jZWVk
        ZWRJbWFnZXNOYisrCglkZWZlciBmdW5jKCkgewoJCXBsdWcucHJvY2VlZGVkSW1hZ2VzTG9jay5M
        b2NrKCkKCQlkZWZlciBwbHVnLnByb2NlZWRlZEltYWdlc0xvY2suVW5sb2NrKCkKCQlwbHVnLnBy
        b2NlZWRlZEltYWdlc05iLS0KCX0oKQoJaWYgXywgb2sgOj0gcGx1Zy5wcm9jZWVkZWRJbWFnZXNb
        dXJsXTsgIW9rIHsKCQlwbHVnLnByb2NlZWRlZEltYWdlc1t1cmxdID0gInByb2NlZWRlZCIKCQlw
        bHVnLnByb2NlZWRlZEltYWdlc0xvY2suVW5sb2NrKCkKCQl2YXIgZXJyUHVsbCBlcnJvciA9IG5p
        bAoJCWVyclB1bGwgPSBwdWxsSW1hZ2VGcm9tUHJveHlDYWNoZSh1cmwsIGNvbmZpZ3VyYXRpb24u
        UmVnZXhVUkwsIGNvbmZpZ3VyYXRpb24uUmVwbGFjZW1lbnRPQ0ksIGNvbmZpZ3VyYXRpb24uUmVw
        bGFjZW1lbnRBcmNoLCBjb25maWd1cmF0aW9uLlRhcmdldEFyY2gsIGNvbmZpZ3VyYXRpb24uVGFy
        Z2V0T1MsIGRyeVJ1bikKCQkKCQlpZiBlcnJQdWxsICE9IG5pbCB7CgkJCWxvZy5JbmZvZigiRXJy
        b3IgcHVsbGluZyBpbWFnZTogJXZcbiIsIGVyclB1bGwpCgkJCWxvZy5GbHVzaCgpCgkJCXBsdWcu
        cHJvY2VlZGVkSW1hZ2VzTG9jay5Mb2NrKCkKCQkJZGVmZXIgcGx1Zy5wcm9jZWVkZWRJbWFnZXNM
        b2NrLlVubG9jaygpCgkJCWRlbGV0ZShwbHVnLnByb2NlZWRlZEltYWdlcywgdXJsKQoJCX0KCX0g
        ZWxzZSB7CgkJbG9nLkluZm9mKCIlcyBhbHJlYWR5IG1ldFxuIiwgdXJsKQoJCWxvZy5GbHVzaCgp
        CgkJcGx1Zy5wcm9jZWVkZWRJbWFnZXNMb2NrLlVubG9jaygpCgl9Cn0KCmZ1bmMgKHBsdWcgKkhh
        cmJvclByb3h5Q2FjaGVQb3B1bGF0b3IpIFN1bW1hcnkoKSBzdHJpbmcgewoJcmV0dXJuIHBsdWcu
        c3VtbWFyeQp9CgovLyBleHBvcnRlZCBhcyBzeW1ib2wgbmFtZWQgIlZlcmFkY29QbHVnaW4iCnZh
        ciBWZXJhZGNvUGx1Z2luIEhhcmJvclByb3h5Q2FjaGVQb3B1bGF0b3IKCgoKLy8vLy8vLy8vLy8v
        Ly8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8KLy8gVXNlZCBm
        b3IgaW1wbGljaXQgcHVsbAovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8K
        Ly8vLy8vLy8vLy8vLy8vLy8vLwoKZnVuYyBxdWVyeUhhcmJvckRvY2tlckFQSSh1cmwgc3RyaW5n
        KSAoW11ieXRlLCBlcnJvcikgewoJdXNlciA6PSBvcy5HZXRlbnYoImhVU0VSIikKCXB3IDo9IG9z
        LkdldGVudigiaFBXIikKCgljbGllbnQgOj0gJmh0dHAuQ2xpZW50ewoJCVRyYW5zcG9ydDogJmh0
        dHAuVHJhbnNwb3J0ewoJCQlUTFNDbGllbnRDb25maWc6ICZ0bHMuQ29uZmlne0luc2VjdXJlU2tp
        cFZlcmlmeTogdHJ1ZX0sCgkJfSwKCX0KCXJlcSwgZXJyIDo9IGh0dHAuTmV3UmVxdWVzdChodHRw
        Lk1ldGhvZEdldCwgdXJsLCBuaWwpCglpZiBlcnIgIT0gbmlsIHsKCQkvLyBsb2cuRmF0YWwoZXJy
        KQoJCXJldHVybiBuaWwsIGVycgoJfQoKCXJlcS5TZXRCYXNpY0F1dGgodXNlciwgcHcpCgoJcmVz
        cCwgZXJyIDo9IGNsaWVudC5EbyhyZXEpCglpZiBlcnIgIT0gbmlsIHsKCQkvLyBsb2cuUHJpbnRm
        KCJFcnJvcmVkIHdoZW4gc2VuZGluZyByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXI6ICV2XG4iLCBlcnIp
        CgkJcmV0dXJuIG5pbCwgZXJyCgl9CgoJZGVmZXIgcmVzcC5Cb2R5LkNsb3NlKCkKCgkvLyBsb2cu
        UHJpbnRmKCJxdWVyeUhhcmJvckRvY2tlckFQSSByZXNwLlN0YXR1cyA9ICV2IiwgcmVzcC5TdGF0
        dXMpCgkvLyBsb2cuUHJpbnRsbihzdHJpbmcocmVzcG9uc2VCb2R5KSkKCglpZiByZXNwLlN0YXR1
        c0NvZGUgPT0gMjAwIHsKCQlyZXNwb25zZUJvZHksIGVyciA6PSBpby5SZWFkQWxsKHJlc3AuQm9k
        eSkKCQlpZiBlcnIgIT0gbmlsIHsKCQkJLy8gbG9nLkZhdGFsKGVycikKCQkJcmV0dXJuIG5pbCwg
        ZXJyCgkJfQoJCXJldHVybiByZXNwb25zZUJvZHksIG5pbAoJfSBlbHNlIHsKCQlyZXR1cm4gbmls
        LCBlcnJvcnMuTmV3KGZtdC5TcHJpbnRmKCJSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2Rl
        ICVkIiwgcmVzcC5TdGF0dXNDb2RlKSkKCX0KCn0KCmZ1bmMgcHVsbEltYWdlRnJvbVByb3h5Q2Fj
        aGUodXJsIHN0cmluZywgcmVnZXhVUkwgc3RyaW5nLCByZXBsYWNlbWVudE9DSSBzdHJpbmcsIHJl
        cGxhY2VtZW50QXJjaCBzdHJpbmcsIHRhcmdldEFyY2ggc3RyaW5nLCB0YXJnZXRPUyBzdHJpbmcs
        IGRyeVJ1biBib29sKSAoZXJyb3IpIHsKCgkvLyBQdWxsaW5nIGFuIGltYWdlIGZyb20gcHJveHkg
        Y2FjaGUgdHJpZ2dlcnMgdGhlIHB1bGwgZnJvbSB0aGUgY2FjaGVkIHJlZ2lzdHJ5IGlmIG5vdCBh
        bHJlYWR5IHByZXNlbnQuCgoJSEFSQk9SUENQX0RFQlVHIDo9IG9zLkdldGVudigiSEFSQk9SUENQ
        X0RFQlVHIikKCglpZiBsZW4oSEFSQk9SUENQX0RFQlVHKSA+IDAgewoJCXJhbmQuU2VlZCh0aW1l
        Lk5vdygpLlVuaXhOYW5vKCkpCgkJbiA6PSA1ICsgcmFuZC5JbnRuKDEwKQoJCWxvZy5JbmZvZigi
        Pj4+Pj4+IHNpbXVsYXRlIHB1bGxJbWFnZUZyb21Qcm94eUNhY2hlIHRvIHB1bGwgJXMgLSBXYWl0
        ICVkIHNlY29uZHNcbiIsdXJsLCBuKQoJCWxvZy5GbHVzaCgpCiAgICB0aW1lLlNsZWVwKHRpbWUu
        RHVyYXRpb24obikqdGltZS5TZWNvbmQpCgkJcmV0dXJuIG5pbAoJfQoKCS8vIGh0dHBzOi8vaGFy
        Ym9yLnJlZ2lzdHJ5Lm1pbmUuaW8vdjIvcHJveHlfZG9ja2VyLmlvL2xpYnJhcnkvbmdpbngvbWFu
        aWZlc3RzLzEuMjItcGVybAoKCS8vIE1vZGlmeSB0byBoYXJib3IgVVJMOgoJcmUgOj0gcmVnZXhw
        Lk11c3RDb21waWxlKHJlZ2V4VVJMKQoKCS8vIHJlcGxhY2VtZW50T0NJIDo9ICJodHRwczovL2hh
        cmJvci5yZWdpc3RyeS5taW5lLmlvL3YyLyQxLyQyL21hbmlmZXN0cy8kMyIKCgkvLyByZXBsYWNl
        bWVudEFyY2ggOj0gImh0dHBzOi8vaGFyYm9yLnJlZ2lzdHJ5Lm1pbmUuaW8vdjIvJDEvJDIvbWFu
        aWZlc3RzL0FSQ0hESUdFU1QiCgoJaWYgISByZS5NYXRjaFN0cmluZyh1cmwpIHsKCQllcnJNc2cg
        Oj0gZm10LlNwcmludGYoIiVzIFVSTCBpcyBub3QgYXMgYXdhaXRlZCIsIHVybCkKCQlsb2cuRXJy
        b3IoZXJyTXNnKQoJCWxvZy5GbHVzaCgpCgkJcmV0dXJuIGVycm9ycy5OZXcoZXJyTXNnKQoJfQoK
        CS8vIFF1ZXJ5IGFyY2hpdGVjdHVyZXMKCXVybE9DSSA6PSByZS5SZXBsYWNlQWxsU3RyaW5nKHVy
        bCwgcmVwbGFjZW1lbnRPQ0kpCgoJdmFyIHJlc3AgW11ieXRlCgl2YXIgZXJyIGVycm9yCgoJaWYg
        ZHJ5UnVuICYmIGxlbihyZXBsYWNlbWVudEFyY2gpID09IDAgewoJCWxvZy5JbmZvZigiRFJZUlVO
        IC8gU2hvdWxkIHF1ZXJ5ICVzIiwgdXJsT0NJKQoJCWxvZy5GbHVzaCgpCgl9IGVsc2UgewoJCS8v
        IHJldHJpZXZlIEFNRCA2NCBkaWdlc3QKCQlyZXNwLCBlcnIgPSBxdWVyeUhhcmJvckRvY2tlckFQ
        SSh1cmxPQ0kpCgoJCWlmIGVyciAhPSBuaWwgewoJCQllcnJNc2cgOj0gZm10LlNwcmludGYoIkVy
        cm9yIHF1ZXJ5aW5nICVzIFVSTDogJXYiLCB1cmxPQ0ksIGVycikKCQkJbG9nLkVycm9yKGVyck1z
        ZykKCQkJbG9nLkZsdXNoKCkKCQkJcmV0dXJuIGVycm9ycy5OZXcoZXJyTXNnKQoJCX0KCQkvLyBl
        bHNlIHsKCQkvLyAJbG9nLlByaW50ZigiUmVzcDogJXNcbiIsIHN0cmluZyhyZXNwKSkKCQkvLyB9
        CgoJfQoJCglpZiBsZW4ocmVwbGFjZW1lbnRBcmNoKSA+IDAgewoKCQkvLyB1bm1hcnNoYWxsIHJl
        c3BvbnNlCgkJdmFyIG9jaU1hbmlmZXN0IE9DSU1hbmlmZXN0CgkJZXJyID0ganNvbi5Vbm1hcnNo
        YWwocmVzcCwgJm9jaU1hbmlmZXN0KQoKCQlpZiBlcnIgIT0gbmlsIHsKCQkJZXJyTXNnIDo9IGZt
        dC5TcHJpbnRmKCJVbmFibGUgdG8gdW5tYXJzaGFsIGpzb24gcmV0dXJuZWQgYnkgVVJMICVzOiAl
        diIsIHVybE9DSSwgZXJyKQoJCQlsb2cuRXJyb3IoZXJyTXNnKQoJCQlsb2cuRmx1c2goKQoJCQly
        ZXR1cm4gZXJyb3JzLk5ldyhlcnJNc2cpCgkJfQoKCQkvLyBsb2cuSW5mb2YoIm9jaU1hbmlmZXN0
        OiAldlxuIiwgb2NpTWFuaWZlc3QpCgoJCWRpZ2VzdCwgZXJyIDo9IHJldHJpZXZlVGFyZ2V0QXJj
        aERpZ2VzdChvY2lNYW5pZmVzdCwgdGFyZ2V0QXJjaCwgdGFyZ2V0T1MpCgoJCWlmIGVyciAhPSBu
        aWwgewoJCQllcnJNc2cgOj0gZm10LlNwcmludGYoIiV2IiwgZXJyKQoJCQlsb2cuRXJyb3IoZXJy
        TXNnKQoJCQlsb2cuRmx1c2goKQoJCQlyZXR1cm4gZXJyb3JzLk5ldyhlcnJNc2cpCgkJfQoKCQkv
        LyBRdWVyeSB0YXJnZXQgYXJjaGl0ZWN0dXJlIGltYWdlCgkJdXJsVGFyZ2V0SW1hZ2UgOj0gcmUu
        UmVwbGFjZUFsbFN0cmluZyh1cmwsIHJlcGxhY2VtZW50QXJjaCkKCgkJdXJsVGFyZ2V0SW1hZ2Ug
        PSBzdHJpbmdzLlJlcGxhY2UodXJsVGFyZ2V0SW1hZ2UsICJBUkNIRElHRVNUIiwgZGlnZXN0LCAt
        MSkKCgkJaWYgISBkcnlSdW4gewoJCQlsb2cuSW5mb2YoInVybFRhcmdldEltYWdlOiAlc1xuIiwg
        dXJsVGFyZ2V0SW1hZ2UpCgkJCWxvZy5GbHVzaCgpCgkJCS8vIHRhcmdldCBhcmNoIGltYWdlCgkJ
        CV8sIGVyciA9IHF1ZXJ5SGFyYm9yRG9ja2VyQVBJKHVybFRhcmdldEltYWdlKQoKCQkJaWYgZXJy
        ICE9IG5pbCB7CgkJCQllcnJNc2cgOj0gZm10LlNwcmludGYoIkVycm9yIHF1ZXJ5aW5nICVzIFVS
        TDogJXYiLCB1cmxUYXJnZXRJbWFnZSwgZXJyKQoJCQkJbG9nLkVycm9yKGVyck1zZykKCQkJCWxv
        Zy5GbHVzaCgpCgkJCQlyZXR1cm4gZXJyb3JzLk5ldyhlcnJNc2cpCgkJCX0KCQl9IGVsc2UgewoJ
        CQlsb2cuSW5mb2YoIkRyeVJ1biB1cmxUYXJnZXRJbWFnZTogJXNcbiIsIHVybFRhcmdldEltYWdl
        KQoJCQlsb2cuRmx1c2goKQoJCX0KCX0KCglyZXR1cm4gbmlsCn0KCmZ1bmMgcmV0cmlldmVUYXJn
        ZXRBcmNoRGlnZXN0KG9jaU1hbmlmZXN0IE9DSU1hbmlmZXN0LCB0YXJnZXRBcmNoIHN0cmluZywg
        dGFyZ2V0T1Mgc3RyaW5nKSAoc3RyaW5nLCBlcnJvcikgewoJZm9yIF8sIGRpZ2VzdFBsYXRmb3Jt
        IDo9IHJhbmdlIG9jaU1hbmlmZXN0Lk1hbmlmZXN0cyB7CgkJaWYgZGlnZXN0UGxhdGZvcm0uUGxh
        dGZvcm0uQXJjaGl0ZWN0dXJlID09ICJhbWQ2NCIgJiYgZGlnZXN0UGxhdGZvcm0uUGxhdGZvcm0u
        T1MgPT0gImxpbnV4IiB7CgkJCXJldHVybiBkaWdlc3RQbGF0Zm9ybS5EaWdlc3QsIG5pbAoJCX0K
        CX0KCWVyck1zZyA6PSBmbXQuU3ByaW50ZigiVW5hYmxlIHRvIHJldHJpZXZlIGRpZ2VzdCBmb3Ig
        YXJjaCAlcyBhbmQgT1MgJXMiLCB0YXJnZXRBcmNoLCB0YXJnZXRPUykKCWxvZy5FcnJvcihlcnJN
        c2cpCglsb2cuRmx1c2goKQoJcmV0dXJuICIiLCBlcnJvcnMuTmV3KGVyck1zZykKfQoKLy8vLy8v
        Ly8vLy8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8vLy8vLy8KLy8g
        VXNlZCBmb3IgaW1wbGljaXQgcHVsbAovLy8vLy8vLy8vLy8vLy8vLy8vCi8vLy8vLy8vLy8vLy8v
        Ly8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vLw==
      # A regular expression to define the kinds on which the plugin is called
      kinds: "(?i)^Pod$"
      # A regular expression to define the operations on which the plugin is called
      # Example: "CREATE|UPDATE"
      # It's up to the plugin to manage different operations in its code
      operations: "CREATE|UPDATE"
      # A regular expression to define the namespaces in the scope of the plugin
      # Example: "kube-system|default"
      namespaces: ".*"
      # Filter only on resources having some labels.
      # Both key and value are regular expressions
      # Filter only on resources having some labels.
      # Both key and value are regular expressions
      # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
      dryRun: true
      # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
      configuration: |
        maxNumberOfParallelJobs: 2
        proxyCaches:
        - regexURL: "(^.+$)"
          replacementOCI: "https://harbor.registry.mine.io/v2/pxcache/$1/manifests/sha256"
          replacementArch: "https://harbor.registry.mine.io/v2/pxcache/$1/manifests/ARCHDIGEST"
          targetArch: "amd64"
          targetOS: "linux"
        # - regexURL: "^.*amazonaws.com/(proxy_[^:/]+)/([^:]+):(.+$)"
        #   replacementOCI: "https://harbor.registry.mine.io/v2/$1/$2/manifests/$3"
        #   replacementArch: "https://harbor.registry.mine.io/v2/$1/$2/manifests/ARCHDIGEST"
        #   targetArch: "amd64"
        #   targetOS: "linux"
      # A regular expression that define the scope of the plugin.
      # "Validating|Mutating" fits to both scopes
      scope: "Validating"

    # - name: "AddDummySidecar"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-add_dummy_sidecar.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: "(!~)kube-system|kube-public"
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # Filter only on resources having some labels.
    #   # Both key and value are regular expressions
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     annotations: 
    #       owner: ^to.+
    #     labels: 
    #       nodegp: ^ng-.+
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Mutating"

    # - name: "ForbidTag"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-forbid_tag.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: "(!~)kube-system|kube-public"
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: true
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     tagToForbid: "(?i):latest$"
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Validating"

    # - name: "RegistryCacheExt"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/external_plugins/registry_cache.so"
    #   code: |
    #     cGFja2FnZSBtYWluCgppbXBvcnQgKAoJYWRtaXNzaW9uICJrOHMuaW8vYXBpL2FkbWlzc2lvbi92
    #     MSIKCXYxICJrOHMuaW8vYXBpL2NvcmUvdjEiCgkiazhzLmlvL2FwaW1hY2hpbmVyeS9wa2cvcnVu
    #     dGltZSIKCSJnaXRodWIuY29tL3NtYXJ0LWR1Y2svdmVyYWRjbyIKCSJmbXQiCgkiZ29wa2cuaW4v
    #     eWFtbC52MyIKCSJyZWdleHAiCgkvLyBtZXRhICJrOHMuaW8vYXBpbWFjaGluZXJ5L3BrZy9hcGlz
    #     L21ldGEvdjEiCikKCnZhciAoCgluYW1lIHN0cmluZyA9ICJSZWdpc3RyeUNhY2hlIgopCgp0eXBl
    #     IEZpbmRSZXBsYWNlIHN0cnVjdCB7CglGaW5kIHN0cmluZyBgeWFtbDoiZmluZCJgCglSZXBsYWNl
    #     IHN0cmluZyBgeWFtbDoicmVwbGFjZSJgCn0KCnR5cGUgUmVnaXN0cnlDYWNoZSBzdHJ1Y3QgewoJ
    #     UmVwbGFjZW1lbnRzIFtdRmluZFJlcGxhY2UgYHlhbWw6InJlcGxhY2VtZW50cyJgCglzdW1tYXJ5
    #     IHN0cmluZyBgeWFtbDoiLSJgCn0KCmZ1bmMgKHBsdWcgKlJlZ2lzdHJ5Q2FjaGUpIEluaXQoY29u
    #     ZmlnRmlsZSBzdHJpbmcpIGVycm9yIHsKCS8vIExvYWQgY29uZmlndXJhdGlvbgoJZXJyIDo9IHlh
    #     bWwuVW5tYXJzaGFsKFtdYnl0ZShjb25maWdGaWxlKSwgcGx1ZykKCWlmIGVyciAhPSBuaWwgewoJ
    #     CXJldHVybiBlcnIKCX0KCWlmIGxlbihwbHVnLlJlcGxhY2VtZW50cykgPT0gMCB7CgkJcmV0dXJu
    #     IGZtdC5FcnJvcmYoIlJlcGxhY2VtZW50cyBsaXN0IHNoYWxsIGNvbnRhaW4gYXQgbGVhc3Qgb25l
    #     IGVsZW1lbnQgZm9yIHBsdWdpbiAlcyIsIG5hbWUpCgl9CglyZXR1cm4gbmlsCn0KCgpmdW5jIChw
    #     bHVnICpSZWdpc3RyeUNhY2hlKSBFeGVjdXRlKGtvYmogcnVudGltZS5PYmplY3QsIG9wZXJhdGlv
    #     biBzdHJpbmcsIGRyeVJ1biBib29sLCByICphZG1pc3Npb24uQWRtaXNzaW9uUmVxdWVzdCkgKCph
    #     ZG1pc3Npb25jb250cm9sbGVyLlJlc3VsdCwgZXJyb3IpIHsKCgkvLyBrb2JqIGlzIHN1cHBvc2Vk
    #     IHRvIGJlIGEgcG9kLi4uCglwb2QsIG9rIDo9IGtvYmouKCp2MS5Qb2QpCglpZiAhb2sgewoJCXBs
    #     dWcuc3VtbWFyeSArPSBmbXQuU3ByaW50ZigiS3ViZXJuZXRlcyByZXNvdXJjZSBpcyBub3QgYSBw
    #     b2QgYXMgZXhwZWN0ZWQgKCVzKSIsIGtvYmouR2V0T2JqZWN0S2luZCgpLkdyb3VwVmVyc2lvbktp
    #     bmQoKS5LaW5kKQoJCXJldHVybiBuaWwsIGZtdC5FcnJvcmYoIkt1YmVybmV0ZXMgcmVzb3VyY2Ug
    #     aXMgbm90IGEgcG9kIGFzIGV4cGVjdGVkICglcykiLCBrb2JqLkdldE9iamVjdEtpbmQoKS5Hcm91
    #     cFZlcnNpb25LaW5kKCkuS2luZCkKCX0KCgl2YXIgb3BlcmF0aW9ucyBbXWFkbWlzc2lvbmNvbnRy
    #     b2xsZXIuUGF0Y2hPcGVyYXRpb24KCglwbHVnLnN1bW1hcnkgPSBmbXQuU3ByaW50ZigiRXhlY3V0
    #     ZSBwbHVnaW4gJXMiLCBuYW1lKQoKCS8vIEJyb3dzZSBjb250YWluZXJzCglmb3IgaSwgYyA6PSBy
    #     YW5nZSBwb2QuU3BlYy5Db250YWluZXJzIHsKCQkvLyBCcm93c2UgcmVwbGFjZW1lbnRzCgkJZm9y
    #     IF8sIG9wIDo9IHJhbmdlIHBsdWcuUmVwbGFjZW1lbnRzIHsKCQkJZmluZCA6PSBvcC5GaW5kCgkJ
    #     CXJlcGxhY2UgOj0gb3AuUmVwbGFjZQoJCQkKCQkJcmUgOj0gcmVnZXhwLk11c3RDb21waWxlKGZp
    #     bmQpCgkJCWltZyA6PSBjLkltYWdlCgkJCWlmIHJlLk1hdGNoU3RyaW5nKGltZykgewoJCQkJaW1n
    #     TmV3IDo9IHJlLlJlcGxhY2VBbGxTdHJpbmcoaW1nLCByZXBsYWNlKQoJCQkJLy8gYWRkIHJlcGxh
    #     Y2UgcGF0Y2gKCQkJCXJlcGxhY2VPcCA6PSBhZG1pc3Npb25jb250cm9sbGVyLlJlcGxhY2VQYXRj
    #     aE9wZXJhdGlvbihmbXQuU3ByaW50ZigiL3NwZWMvY29udGFpbmVycy8lZC9pbWFnZSIsIGkpLCBp
    #     bWdOZXcpCgkJCQlvcGVyYXRpb25zID0gYXBwZW5kKG9wZXJhdGlvbnMsIHJlcGxhY2VPcCkKCQkJ
    #     CXBsdWcuc3VtbWFyeSArPSAiXG4iICsgZm10LlNwcmludGYoIkFkZCByZXBhY2VtZW50IG9wZXJh
    #     dGlvbiAldiIsIHJlcGxhY2VPcCkKCQkJCWJyZWFrCgkJCX0KCQl9Cgl9CgoJcmV0dXJuICZhZG1p
    #     c3Npb25jb250cm9sbGVyLlJlc3VsdHsKCQlBbGxvd2VkOiAgdHJ1ZSwKCQlQYXRjaE9wczogb3Bl
    #     cmF0aW9ucywKCX0sIG5pbAp9CgpmdW5jIChwbHVnICpSZWdpc3RyeUNhY2hlKSBTdW1tYXJ5KCkg
    #     c3RyaW5nIHsKCXJldHVybiBwbHVnLnN1bW1hcnkKfQoKLy8gZXhwb3J0ZWQgYXMgc3ltYm9sIG5h
    #     bWVkICJWZXJhZGNvUGx1Z2luIgp2YXIgVmVyYWRjb1BsdWdpbiBSZWdpc3RyeUNhY2hl
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE|DELETE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: false
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     replacements:
    #     - find: "(^[^:/]+$)"
    #       replace: "registry.hub.docker.com/library/$1:latest"
    #     - find: "^([^:/]+:[^:/]+)$"
    #       replace: "registry.hub.docker.com/library/$1"
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Mutating"

    # - name: "RegistryCache"
    #   # The path of the plugin.
    #   # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
    #   # For a built-in plugin the path is /app/plugins
    #   # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
    #   path: "/app/plugins/built-in-registry_cache.so"
    #   # A regular expression to define the kinds on which the plugin is called
    #   kinds: "(?i)^Pod$"
    #   # A regular expression to define the operations on which the plugin is called
    #   # Example: "CREATE|UPDATE"
    #   # It's up to the plugin to manage different operations in its code
    #   operations: "CREATE|UPDATE"
    #   # A regular expression to define the namespaces in the scope of the plugin
    #   # Example: "kube-system|default"
    #   namespaces: ".*"
    #   # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
    #   dryRun: false
    #   # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
    #   configuration: |
    #     replacements:
    #     - find: "(^[^:/]+$)"
    #       replace: "registry.hub.docker.com/library/$1:latest"
    #     - find: "^([^:/]+:[^:/]+)$"
    #       replace: "registry.hub.docker.com/library/$1"
    #   # A regular expression that define the scope of the plugin.
    #   # "Validating|Mutating" fits to both scopes
    #   scope: "Mutating"