apiVersion: apps.veradco-operator.com/v1alpha1
kind: VeracoPlugin
metadata:
  name: veradco-plugin-cr-example
spec:
  name: "AddDummySidecar2"
  # The path of the plugin.
  # If the plugin needs to be build from the parameter plug.go (below), it is MANDATORY that is path is /app/external_plugins. It will be built by the Init Container.
  # For a built-in plugin the path is /app/plugins
  # For a plugin you built yourself the path is as you want. We advise you to build your plugin by using the init container docker image to avoid infrequent issues with Golang plugins compatibility. TODO: documentation.
  path: "/app/plugins/built-in-add_dummy_sidecar.so"
  # A regular expression to define the kinds on which the plugin is called
  kinds: "^Pod$"
  code: "code"
  # A regular expression to define the operations on which the plugin is called
  # Example: "CREATE|UPDATE"
  # It's up to the plugin to manage different operations in its code
  operations: "CREATE"
  # A regular expression to define the namespaces in the scope of the plugin
  # Example: "kube-system|default"
  namespaces: "(!~)kube-system|kube-public"
  # Filter only on resources having some labels.
  # Both key and value are regular expressions
  # Filter only on resources having some labels.
  # Both key and value are regular expressions
  # This parameter is used together with the one of the AdmissionRequest: dryRun = dryRun || AdmissionRequest.DryRun
  dryRun: true
  # The configuration of the plugin. Passed to the plugin via the Init function of the plugin.
  configuration: |
    annotations: 
      owner: ^to.+
    labels: 
      nodegp: ^ng-.+
  # A regular expression that define the scope of the plugin.
  # "Validating|Mutating" fits to both scopes
  scope: "Mutating"